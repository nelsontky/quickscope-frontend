{"version":3,"sources":["components/TopBar.js","components/ErrorBoundary.js","components/FilterDropdown.js","components/Tag.js","components/IconWithText.js","components/PurpleCard.js","components/JobPreviewCard.js","components/SearchBar.js","utils/general-utils.js","pages/Home.js","components/job-listing/JobHeader.js","pages/JobListing.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","borderBottom","palette","divider","zIndex","drawer","toolbar","flexWrap","toolbarTitleContainer","flexGrow","toolbarTitle","fontWeight","typography","fontWeightBold","fontSize","link","margin","spacing","textDecoration","color","common","white","TopBar","classes","AppBar","position","elevation","className","Toolbar","Typography","component","Link","to","variant","noWrap","clsx","IconButton","style","ErrorBoundary","state","hasError","error","this","Container","maxWidth","gutterBottom","props","children","React","Component","formControl","height","backgroundColor","primary","main","select","paddingLeft","paddingTop","icon","marginTop","marginLeft","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","FilterDropdown","label","value","onChange","items","FormControl","Select","multiple","displayEmpty","input","Input","renderValue","selected","length","IconComponent","ExpandMoreIcon","root","map","item","MenuItem","Checkbox","checked","indexOf","ListItemText","chip","borderRadius","Tag","rest","Chip","deleteIcon","IconWithText","swapOrder","Grid","container","wrap","alignItems","direction","cloneElement","boxShadow","shadows","border","PurpleCard","Card","favorite","title","display","overflow","description","JobPreviewCard","job","useState","isLiked","setIsLiked","id","tags","salary","commitment","period","location","CardContent","justify","size","onClick","e","preventDefault","tag","xs","padding","flex","iconButton","SearchBar","onSubmit","placeholder","Paper","InputBase","type","splitCamelCase","s","string","replace","charAt","toUpperCase","slice","searchFilters","db","filters","jobs","resultsContainer","searchBar","filterBar","headerText","marginBottom","chipsContainer","sort","minWidth","Home","skills","jobType","experience","setFilters","sortBy","setSortBy","isShowChips","Object","keys","reduce","acc","section","Box","textAlign","filter","name","target","Collapse","in","onDelete","deleteFilter","InputLabel","i","titleContainer","avatar","bold","hirerTitle","hirerDescription","vacancies","applications","hirer","HirerCard","image","Avatar","src","Button","fullWidth","headerContainer","primaryColor","useParams","find","hasNext","findIndex","parseInt","hasPrevious","otherInformation","dangerouslySetInnerHTML","__html","App","CssBaseline","fixed","exact","path","createMuiTheme","fontFamily","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8aba9eb8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\n\n// Material UI components\nimport AppBar from \"@material-ui/core/AppBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI Icons\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolbar: {\n    flexWrap: \"wrap\",\n  },\n  toolbarTitleContainer: {\n    flexGrow: 1,\n  },\n  toolbarTitle: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: \"32px\",\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n    textDecoration: \"none\",\n    color: theme.palette.common.white,\n  },\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar\n        position=\"fixed\"\n        color=\"primary\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar}>\n          <div className={classes.toolbarTitleContainer}>\n            <Typography\n              component={Link}\n              to=\"/\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={clsx(classes.toolbarTitle, classes.link)}\n            >\n              QuickScope\n            </Typography>\n          </div>\n          <nav>\n            <Typography\n              component={Link}\n              to=\"/applications\"\n              className={classes.link}\n            >\n              My Applications\n            </Typography>\n            <Typography\n              component={Link}\n              to=\"/listings\"\n              className={classes.link}\n            >\n              My Listings\n            </Typography>\n            <Typography\n              component={Link}\n              to=\"/portfolio\"\n              className={classes.link}\n            >\n              My Portfolio\n            </Typography>\n          </nav>\n          {/* TODO LOGIN DETECTION */}\n          <IconButton\n            component={Link}\n            to=\"/profile\"\n          >\n            <PersonIcon style={{ color: \"white\" }} />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </>\n  );\n}\n","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nexport default class ErrorBoundary extends React.Component {\n  state = { hasError: false, error: null };\n  static getDerivedStateFromError(error) {\n    return {\n      hasError: true,\n      error,\n    };\n  }\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"h5\" gutterBottom>Page not found</Typography>\n          <Typography variant=\"body1\">\n            Oops! The page you are looking for does not exist! Please refresh\n            your browser.\n          </Typography>\n        </Container>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    height: 48,\n    backgroundColor: theme.palette.primary.main,\n  },\n  white: {\n    color: theme.palette.common.white,\n  },\n  select: {\n    paddingLeft: theme.spacing(1),\n    paddingTop: 14,\n  },\n  icon: {\n    marginTop: 3,\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport default function FilterDropdown({ label, value, onChange, items }) {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.formControl}>\n      <Select\n        multiple\n        displayEmpty\n        value={value}\n        onChange={onChange}\n        input={<Input />}\n        renderValue={(selected) => {\n          if (selected.length === 0) {\n            return label;\n          }\n\n          return (\n            <span>\n              <strong>\n                <u>{selected.length}</u>\n              </strong>{\" \"}\n              {label}\n            </span>\n          );\n        }}\n        IconComponent={ExpandMoreIcon}\n        classes={{\n          icon: clsx(classes.white, classes.icon),\n          root: clsx(classes.white, classes.select),\n        }}\n        MenuProps={MenuProps}\n      >\n        {items.map((item) => (\n          <MenuItem key={item} value={item}>\n            <Checkbox checked={value.indexOf(item) > -1} />\n            <ListItemText primary={item} />\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nimport Chip from \"@material-ui/core/Chip\";\n\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst useStyles = makeStyles({\n  chip: {\n    borderRadius: 3,\n    height: 21,\n  },\n});\n\nexport default function Tag({ label, variant, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Chip\n      {...rest}\n      className={clsx(classes.chip, rest.className)}\n      label={label}\n      variant={variant}\n      color=\"primary\"\n      deleteIcon={<ClearIcon />}\n    />\n  );\n}\n","import React from \"react\";\n\n// Material UI components\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default function IconWithText({\n  IconComponent,\n  children,\n  className,\n  swapOrder,\n  ...rest\n}) {\n  return (\n    <Grid\n      container\n      spacing={1}\n      wrap=\"nowrap\"\n      alignItems=\"center\"\n      direction={swapOrder ? \"row-reverse\" : \"row\"}\n    >\n      <Grid item>{React.cloneElement(IconComponent)}</Grid>\n      <Grid item>\n        <Typography {...rest} className={className} gutterBottom>\n          {children}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\nimport Card from \"@material-ui/core/Card\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: theme.shadows[0],\n    border: `2px solid ${theme.palette.primary.main}`,\n    borderRadius: 8,\n  },\n}));\n\nexport default function PurpleCard({ className, children, ...rest }) {\n  const classes = useStyles();\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      {children}\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nimport Tag from \"./Tag\";\nimport IconWithText from \"./IconWithText\";\nimport PurpleCard from \"./PurpleCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: \"none\",\n  },\n  root: {\n    width: \"100%\",\n  },\n  favorite: {\n    color: theme.palette.primary.main,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: theme.typography.fontWeightBold,\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": 1,\n    \"-webkit-box-orient\": \"vertical\",\n    overflow: \"hidden\",\n  },\n  description: {\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": 2,\n    \"-webkit-box-orient\": \"vertical\",\n    overflow: \"hidden\",\n  },\n}));\n\nexport default function JobPreviewCard({ job }) {\n  const classes = useStyles();\n  const [isLiked, setIsLiked] = useState(false);\n\n  const {\n    id,\n    title,\n    description,\n    tags,\n    salary,\n    commitment,\n    period,\n    location,\n  } = job;\n\n  return (\n    <Link to={`/jobs/${id}`} className={classes.link}>\n      <PurpleCard className={classes.root}>\n        <CardContent>\n          <Grid\n            container\n            wrap=\"nowrap\"\n            alignItems=\"center\"\n            justify=\"space-between\"\n          >\n            <Typography\n              component={Grid}\n              item\n              className={classes.title}\n              gutterBottom\n            >\n              {title}\n            </Typography>\n            <Grid item>\n              <IconButton\n                size=\"small\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setIsLiked(!isLiked);\n                }}\n              >\n                {isLiked ? (\n                  <FavoriteIcon fontSize=\"large\" style={{ color: \"#c30000\" }} />\n                ) : (\n                  <FavoriteBorderIcon\n                    className={classes.favorite}\n                    fontSize=\"large\"\n                  />\n                )}\n              </IconButton>\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={2} direction=\"column\">\n            <Grid item>\n              <Typography\n                className={classes.description}\n                variant=\"body2\"\n                component=\"p\"\n                gutterBottom\n              >\n                {description}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Grid container spacing={1}>\n                {tags.map((tag) => (\n                  <Grid item key={tag}>\n                    <Tag label={tag} variant=\"outlined\" />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Grid container wrap=\"nowrap\">\n                <Grid item xs={6}>\n                  <IconWithText\n                    variant=\"body2\"\n                    IconComponent={<AttachMoneyIcon />}\n                  >\n                    {salary}\n                  </IconWithText>\n                </Grid>\n                <Grid item xs={6}>\n                  <IconWithText\n                    variant=\"body2\"\n                    IconComponent={<QueryBuilderIcon />}\n                  >\n                    {commitment}\n                  </IconWithText>\n                </Grid>\n              </Grid>\n              <Grid container wrap=\"nowrap\">\n                <Grid item xs={6}>\n                  <IconWithText\n                    variant=\"body2\"\n                    IconComponent={<DateRangeIcon />}\n                  >\n                    {period}\n                  </IconWithText>\n                </Grid>\n                <Grid item xs={6}>\n                  <IconWithText\n                    variant=\"body2\"\n                    IconComponent={<RoomOutlinedIcon />}\n                  >\n                    {location}\n                  </IconWithText>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </PurpleCard>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n}));\n\nexport default function SearchBar({\n  value,\n  onChange,\n  onSubmit,\n  placeholder,\n  className,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Paper\n      component=\"form\"\n      className={clsx(classes.root, className)}\n      onSubmit={onSubmit}\n    >\n      <InputBase\n        className={classes.input}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton}>\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function splitCamelCase(s) {\n  return capitalizeFirstLetter(s.replace(/([a-z](?=[A-Z]))/g, \"$1 \"));\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI components\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\n// Custom components\nimport FilterDropdown from \"../components/FilterDropdown\";\nimport JobPreviewCard from \"../components/JobPreviewCard\";\nimport SearchBar from \"../components/SearchBar\";\nimport Tag from \"../components/Tag\";\n\nimport { splitCamelCase } from \"../utils/general-utils\";\nimport db from \"../db.json\";\n\nconst searchFilters = db.filters;\nconst jobs = db.jobs;\n\nconst useStyles = makeStyles((theme) => ({\n  resultsContainer: {\n    marginTop: theme.spacing(1),\n  },\n  searchBar: {\n    maxWidth: \"994px\",\n    margin: \"0 auto\",\n  },\n  filterBar: {\n    backgroundColor: theme.palette.primary.main,\n    maxWidth: \"994px\",\n    margin: \"0 auto\",\n  },\n  headerText: {\n    fontWeight: theme.typography.fontWeightBold,\n    marginBottom: theme.spacing(3),\n  },\n  chipsContainer: {\n    marginTop: theme.spacing(2),\n  },\n  sort: {\n    margin: theme.spacing(1),\n    minWidth: 155,\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n\n  const [filters, setFilters] = useState({\n    skills: [],\n    jobType: [],\n    location: [],\n    salary: [],\n    commitment: [],\n    experience: [],\n  });\n\n  const [sortBy, setSortBy] = useState(\"\");\n\n  const changeFilters = (name) => (e) => {\n    setFilters({ ...filters, [name]: e.target.value });\n  };\n\n  const deleteFilter = (section, filter) => {\n    setFilters({\n      ...filters,\n      [section]: filters[section].filter((item) => filter !== item),\n    });\n  };\n\n  // True if at least 1 filter is selected\n  const isShowChips =\n    Object.keys(filters).reduce(\n      (acc, section) => acc + filters[section].length,\n      0\n    ) !== 0;\n\n  return (\n    <Box>\n      <Box textAlign=\"center\">\n        <Typography className={classes.headerText} variant=\"h4\">\n          Explore Jobs\n        </Typography>\n      </Box>\n      <SearchBar\n        className={classes.searchBar}\n        placeholder=\"Find by Skills, Jobs, Companies, or Location\"\n      />\n      <Grid\n        container\n        wrap=\"nowrap\"\n        justify=\"space-evenly\"\n        className={classes.filterBar}\n      >\n        {Object.keys(searchFilters).map((filter) => (\n          <Grid item>\n            <FilterDropdown\n              key={filter}\n              value={filters[filter]}\n              onChange={changeFilters(filter)}\n              label={splitCamelCase(filter)}\n              items={searchFilters[filter]}\n            />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Collapse in={isShowChips} className={classes.chipsContainer}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <Typography variant=\"body1\">Filter: </Typography>\n          </Grid>\n          {Object.keys(filters).map((section) =>\n            filters[section].map((filter) => (\n              <Grid item key={filter}>\n                <Tag\n                  label={filter}\n                  color=\"primary\"\n                  onDelete={() => deleteFilter(section, filter)}\n                />\n              </Grid>\n            ))\n          )}\n        </Grid>\n      </Collapse>\n\n      <Grid container justify=\"flex-end\">\n        <Grid item>\n          <FormControl variant=\"outlined\" className={classes.sort}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">\n              Sort By\n            </InputLabel>\n            <Select\n              value={sortBy}\n              onChange={(e) => {\n                setSortBy(e.target.value);\n              }}\n              label=\"Sort By\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value=\"Salary\">Salary</MenuItem>\n              <MenuItem value=\"Commitment\">Commitment</MenuItem>\n              <MenuItem value=\"period\">Period</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={8} className={classes.resultsContainer}>\n        {jobs.map((job, i) => (\n          <Grid item xs={4} key={i}>\n            <JobPreviewCard job={job} />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Card from \"@material-ui/core/Card\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\n\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport RoomOutlinedIcon from \"@material-ui/icons/RoomOutlined\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TouchAppOutlinedIcon from \"@material-ui/icons/TouchAppOutlined\";\nimport PurpleCard from \"../PurpleCard\";\n\nimport Tag from \"../Tag\";\nimport IconWithText from \"../IconWithText\";\n\nconst useStyles = makeStyles((theme) => ({\n  favorite: {\n    color: theme.palette.primary.main,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  titleContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  avatar: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  bold: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  hirerTitle: {\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": 1,\n    \"-webkit-box-orient\": \"vertical\",\n    overflow: \"hidden\",\n  },\n  hirerDescription: {\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": 4,\n    \"-webkit-box-orient\": \"vertical\",\n    overflow: \"hidden\",\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default function JobPreviewCard({ job }) {\n  const classes = useStyles();\n  const [isLiked, setIsLiked] = useState(false);\n\n  const {\n    title,\n    description,\n    tags,\n    salary,\n    commitment,\n    period,\n    location,\n    vacancies,\n    applications,\n    hirer,\n  } = job;\n\n  return (\n    <PurpleCard className={classes.root}>\n      <CardContent>\n        <Grid container>\n          <Grid item xs={8}>\n            <Grid\n              item\n              xs={8}\n              container\n              wrap=\"nowrap\"\n              alignItems=\"center\"\n              justify=\"space-between\"\n              className={classes.titleContainer}\n            >\n              <Typography\n                component={Grid}\n                item\n                className={classes.title}\n                gutterBottom\n              >\n                {title}\n              </Typography>\n              <Grid item>\n                <IconButton onClick={() => setIsLiked(!isLiked)}>\n                  {isLiked ? (\n                    <FavoriteIcon\n                      fontSize=\"large\"\n                      style={{ color: \"#c30000\" }}\n                    />\n                  ) : (\n                    <FavoriteBorderIcon\n                      className={classes.favorite}\n                      fontSize=\"large\"\n                    />\n                  )}\n                </IconButton>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={2} direction=\"column\">\n              <Grid item>\n                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                  {description}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Grid container spacing={1}>\n                  {tags.map((tag) => (\n                    <Grid item key={tag}>\n                      <Tag label={tag} variant=\"outlined\" />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container wrap=\"nowrap\" spacing={1}>\n                  <Grid item xs={4}>\n                    <IconWithText\n                      variant=\"body2\"\n                      IconComponent={<AttachMoneyIcon />}\n                    >\n                      {`Salary: ${salary}`}\n                    </IconWithText>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <IconWithText\n                      variant=\"body2\"\n                      IconComponent={<QueryBuilderIcon />}\n                    >\n                      {`Commitment: ${commitment}`}\n                    </IconWithText>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <IconWithText\n                      variant=\"body2\"\n                      IconComponent={<SearchIcon />}\n                    >\n                      {`Vacancies: ${vacancies}`}\n                    </IconWithText>\n                  </Grid>\n                </Grid>\n                <Grid container wrap=\"nowrap\">\n                  <Grid item xs={4}>\n                    <IconWithText\n                      variant=\"body2\"\n                      IconComponent={<DateRangeIcon />}\n                    >\n                      {`Period: ${period}`}\n                    </IconWithText>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <IconWithText\n                      variant=\"body2\"\n                      IconComponent={<RoomOutlinedIcon />}\n                    >\n                      {`Location: ${location}`}\n                    </IconWithText>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <IconWithText\n                      variant=\"body2\"\n                      IconComponent={<TouchAppOutlinedIcon />}\n                    >\n                      {`Applications: ${applications}`}\n                    </IconWithText>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={4}>\n            <HirerCard hirer={hirer} />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </PurpleCard>\n  );\n}\n\nfunction HirerCard({ hirer }) {\n  const { name, image, description } = hirer;\n  const classes = useStyles();\n\n  return (\n    <Card elevation={0}>\n      <CardContent>\n        <Typography className={classes.bold} variant=\"body1\">\n          About Hirer\n        </Typography>\n        <Grid\n          container\n          wrap=\"nowrap\"\n          spacing={2}\n          alignItems=\"center\"\n          className={classes.titleContainer}\n        >\n          <Grid item>\n            <Avatar src={image} className={classes.avatar} />\n          </Grid>\n          <Grid item>\n            <Typography className={classes.hirerTitle} variant=\"h6\">\n              {name}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Typography className={classes.hirerDescription} variant=\"body2\">\n          {description}\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          classes={{ label: classes.hirerTitle }}\n          fullWidth\n        >{`See more jobs from ${name}`}</Button>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams, Link } from \"react-router-dom\";\n\n// Material UI components\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\n\n// Custom components\nimport IconWithText from \"../components/IconWithText\";\nimport JobHeader from \"../components/job-listing/JobHeader\";\nimport PurpleCard from \"../components/PurpleCard\";\n\nimport db from \"../db.json\";\n\nconst jobs = db.jobs;\n\nconst useStyles = makeStyles((theme) => ({\n  resultsContainer: {\n    marginTop: theme.spacing(3),\n  },\n  searchBar: {\n    maxWidth: \"994px\",\n    margin: \"0 auto\",\n  },\n  filterBar: {\n    backgroundColor: theme.palette.primary.main,\n    maxWidth: \"994px\",\n    margin: \"0 auto\",\n  },\n  headerContainer: {\n    textAlign: \"center\",\n  },\n  headerText: {\n    fontWeight: theme.typography.fontWeightBold,\n    marginBottom: theme.spacing(3),\n  },\n  chipsContainer: {\n    marginTop: theme.spacing(2),\n  },\n  primaryColor: {\n    color: theme.palette.primary.main,\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const { id } = useParams();\n\n  const job = jobs.find((job) => job.id === id);\n  const hasNext =\n    jobs.findIndex((job) => job.id === parseInt(id) + 1 + \"\") > -1;\n  const hasPrevious =\n    jobs.findIndex((job) => job.id === parseInt(id) - 1 + \"\") > -1;\n\n  const { otherInformation } = job;\n\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid\n        container\n        item\n        alignItems=\"baseline\"\n        justify=\"space-between\"\n        wrap=\"nowrap\"\n      >\n        <Grid item xs={3}>\n          {hasPrevious && (\n            <Link\n              className={classes.primaryColor}\n              to={`/jobs/${parseInt(id) - 1}`}\n            >\n              <IconWithText\n                IconComponent={\n                  <ChevronLeftIcon className={classes.primaryColor} />\n                }\n              >\n                Previous job\n              </IconWithText>\n            </Link>\n          )}\n        </Grid>\n        <Grid item xs={6} className={classes.headerContainer}>\n          <Typography className={classes.headerText} variant=\"h4\">\n            Job Listing\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          {hasNext && (\n            <Link\n              className={classes.primaryColor}\n              to={`/jobs/${parseInt(id) + 1}`}\n            >\n              <IconWithText\n                IconComponent={\n                  <ChevronRightIcon className={classes.primaryColor} />\n                }\n                swapOrder\n              >\n                Next job\n              </IconWithText>\n            </Link>\n          )}\n        </Grid>\n      </Grid>\n\n      <Grid item>\n        <JobHeader job={job} />\n      </Grid>\n      <Grid item>\n        <PurpleCard>\n          <CardContent>\n            <Box dangerouslySetInnerHTML={{ __html: otherInformation }} />\n          </CardContent>\n        </PurpleCard>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI components\nimport Container from \"@material-ui/core/Container\";\n\n// Custom components\nimport TopBar from \"./components/TopBar\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\n// Pages\nimport Home from \"./pages/Home\";\nimport JobListing from \"./pages/JobListing\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <CssBaseline />\n      <TopBar />\n      <Container className={classes.root} fixed>\n        <ErrorBoundary>\n          <Switch>\n            <Route exact path=\"/jobs/:id\">\n              <JobListing />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </ErrorBoundary>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#070031\",\n    },\n  },\n  typography: {\n    fontFamily: \"Montserrat, Helvetica, Arial, sans-serif\",\n  },\n});\n\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}